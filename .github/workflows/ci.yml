name: Continuous Integration

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # -------------------------
  # Unit Tests
  # -------------------------
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:16
        env:
          POSTGRES_DB: genbook_test
          POSTGRES_USER: genbook-user
          POSTGRES_PASSWORD: genbook-pwd
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env
        run: cp .env.example .env

      - name: Composer install
        run: ./run composer install

      - name: Up containers
        run: ./run up -d

      - name: Wait for DB
        run: |
          until docker compose exec db pg_isready -U genbook-user; do
            echo "Waiting for DB..."
            sleep 2
          done

      - name: Run PHPUnit tests
        run: ./run tests

  # -------------------------
  # Acceptance Tests (Dusk)
  # -------------------------
  acceptance_tests:
    name: Acceptance Tests
    runs-on: ubuntu-latest
    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
      db:
        image: postgres:16
        env:
          POSTGRES_DB: genbook_test
          POSTGRES_USER: genbook-user
          POSTGRES_PASSWORD: genbook-pwd
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Composer install
        run: ./run composer install

      - name: Up containers
        run: ./run up -d

      - name: Wait for Selenium
        run: |
          until curl -s http://localhost:4444/wd/hub/status | grep '"ready":true'; do
            echo "Waiting for Selenium..."
            sleep 2
          done

      - name: Run Dusk tests
        run: ./run dusk

  # -------------------------
  # Code Quality
  # -------------------------
  code_quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env
        run: cp .env.example .env

      - name: Composer install
        run: ./run composer install

      - name: PSR-4 Autoload Check
        run: ./run composer dump-autoload --optimize --strict-psr

      - name: PHPCS
        run: ./run phpcs

      - name: PHPStan
        run: ./run phpstan
