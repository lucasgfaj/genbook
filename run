#!/bin/bash

set -o errexit
set -o pipefail

source .env

function ps {
    docker compose ps
}

function up {
    docker compose up "${@}"
}

function down {
    docker compose down "${@}"
}

function composer {
    docker run --rm --interactive \
        -e COMPOSER_CACHE_DIR="/app/.cache/composer" \
        -u "$(id -u):$(id -g)" -v "$(pwd):/app" \
        -w /app composer:2.7.2 composer "${@}"
}

function nginx:check {
    docker compose exec web nginx -t
}

function nginx:status {
    docker compose exec web service nginx status
}

function nginx:reload {
    docker compose exec web nginx -s reload
}

function php:console {
    docker compose exec php php -a
}

function test {
    TEST_PATH="${@:-tests}"
    docker compose run --rm php_test ./vendor/bin/phpunit --color ${TEST_PATH}
}

function phpcs {
    TEST_PATH="${@:-.}"
    docker compose run --rm php ./vendor/bin/phpcs -d memory_limit=1G ${TEST_PATH}
}

function phpcbf {
    TEST_PATH="${@:-.}"
     docker compose run --rm php ./vendor/bin/phpcbf -d memory_limit=1G ${TEST_PATH}
}

function phpstan {
    TEST_PATH="${@:-}"
    docker compose run --rm php ./vendor/bin/phpstan analyse --memory-limit 1G ${TEST_PATH}
}

function git:clean:branchs {
    git branch | grep -v '\*\|master\|main\|develop\|production' | xargs -n 1 git branch -D
}

function db:console {
    docker compose exec db psql -U ${DB_USERNAME} -d ${DB_DATABASE}
}

function db:reset {
    docker compose exec php php artisan migrate:fresh --seed
}

function db:populate {
    docker compose exec php php artisan db:seed
}

TIMEFORMAT=$'\nTask completed in %3lR'
time ${@}